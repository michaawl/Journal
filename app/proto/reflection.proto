syntax = "proto3";

option csharp_namespace = "ReflectionGrpcService";

service Reflection {
  rpc GetReflectionQuestions(GetReflectionQuestionsRequest) returns (GetReflectionQuestionsReply);

  rpc GetReflectionAnswerByQuestionId(GetReflectionAnswerByQuestionIdRequest) returns (GetReflectionAnswerByQuestionIdReply);

  rpc PostReflectionQuestion(PostReflectionQuestionRequest) returns (PostReflectionQuestionReply);

  rpc PostReflectionAnswer(PostReflectionAnswerRequest) returns (PostReflectionAnswerReply);

  rpc UpdateReflectionQuestionActiveStatus(UpdateReflectionQuestionActiveRequest) returns (UpdateReflectionQuestionActiveReply);

 rpc GetReflectionAnswersByDate(GetReflectionAnswersByDateRequest) returns (GetReflectionAnswersByDateReply);}

message GetReflectionQuestionsRequest {
  int64 user_id = 1; 
}

message GetReflectionQuestionsReply {
  repeated ReflectionQuestion questions = 1; 
}


message GetReflectionAnswerByQuestionIdRequest {
  int64 question_id = 1; 
}

message GetReflectionAnswerByQuestionIdReply {
  ReflectionAnswer answer = 1; 
}

message PostReflectionQuestionRequest {
  int64 user_id = 1;          
  string question_text = 2;   
  string schedule_type = 3;   
  string schedule_value = 4;  
}

message PostReflectionQuestionReply {
  string message = 1; // Response message
}

message PostReflectionAnswerRequest {
  int64 question_id = 1;       
  int64 user_id = 2;           
  string answer_content = 3;   
  string answer_date = 4;      
  bool is_completed = 5;       
}

message PostReflectionAnswerReply {
  string message = 1; 
}

message ReflectionQuestion {
  int64 question_id = 1;       
  int64 user_id = 2;           
  string question_text = 3;    
  string schedule_type = 4;    
  string schedule_value = 5;   
}

message ReflectionAnswer {
  int64 answer_id = 1;         
  int64 question_id = 2;       
  int64 user_id = 3;           
  string answer_content = 4;   
  string answer_date = 5;      
  bool is_completed = 6;       
}

message UpdateReflectionQuestionActiveRequest {
  int64 question_id = 1;  
  bool active = 2;        
}

message UpdateReflectionQuestionActiveReply {
  string message = 1; // Response message
}

message GetReflectionAnswersByDateRequest {
  string date = 1; // (e.g., "2025-01-25")
}

message GetReflectionAnswersByDateReply {
  repeated ReflectionAnswerWithQuestion answers_with_questions = 1; // List of answers with questions
}

message ReflectionAnswerWithQuestion {
  ReflectionAnswer answer = 1;       
  ReflectionQuestion question = 2;  
}
